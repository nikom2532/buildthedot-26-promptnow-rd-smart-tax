package com.revenuedepartment.app;

import android.app.Activity;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;

import com.revenuedepartment.customview.TextViewCustom;
import com.revenuedepartment.function.CheckLang;
import com.revenuedepartment.function.PopupDialog;

public class MainEFilling extends Activity implements OnClickListener {

	// Button btFilling, btUserProfile, btPrint, btCheckStatus, btSetting,
	// , btInstructions;
	Button btSetting, btLogout;
	RelativeLayout rlUserProfile, rlPrint, rlCheckStatus, rlFilling, rlInstructions, rlChangePassword, rlPayPnd;

	public static int RESULT_CLOSE = 1000;
	public static int RESULT_SENDSATISFACTION = 1001;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setView();
	}

	private void setView() {
		setContentView(R.layout.mainefilling);
		// btFilling = (Button) findViewById(R.id.btFilling);
		// btUserProfile = (Button) findViewById(R.id.btUserProfile);
		// btPrint = (Button) findViewById(R.id.btPrint);
		// btCheckStatus = (Button) findViewById(R.id.btCheckStatus);
		btSetting = (Button) findViewById(R.id.btSetting);
		btLogout = (Button) findViewById(R.id.btLogout);
		// btInstructions = (Button) findViewById(R.id.btRecommend);

		rlUserProfile = (RelativeLayout) findViewById(R.id.rlUserProfile);
		rlPrint = (RelativeLayout) findViewById(R.id.rlPrint);
		rlInstructions = (RelativeLayout) findViewById(R.id.rlRecommend);
		rlFilling = (RelativeLayout) findViewById(R.id.rlFilling);
		rlCheckStatus = (RelativeLayout) findViewById(R.id.rlCheckStatus);
		rlChangePassword = (RelativeLayout) findViewById(R.id.rlChangePassword);
		rlPayPnd = (RelativeLayout) findViewById(R.id.rlPayPnd);

		rlUserProfile.setOnClickListener(this);
		rlPrint.setOnClickListener(this);
		rlInstructions.setOnClickListener(this);
		rlFilling.setOnClickListener(this);
		rlCheckStatus.setOnClickListener(this);
		rlChangePassword.setOnClickListener(this);
		rlPayPnd.setOnClickListener(this);
	}

	@Override
	public void onClick(View v) {
		if (v.equals(rlFilling)) {

			setSelector(rlFilling, R.id.icFilling, R.id.txFilling, R.drawable.icon_pnd91_selection);
			Intent intent = new Intent(MainEFilling.this, PreFilling.class);
			intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
			startActivityForResult(intent, 0);
		} else if (v.equals(rlUserProfile)) {
			setSelector(rlUserProfile, R.id.icUserProfile, R.id.txUserProfile, R.drawable.icon_general_profile_selection);
			Intent intent = new Intent(MainEFilling.this, MenuUser.class);
			intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
			startActivityForResult(intent, 0);
		} else if (v.equals(rlPrint)) {

			setSelector(rlPrint, R.id.icPrint, R.id.txPrint, R.drawable.icon_print_selection);
			Intent intent = new Intent(MainEFilling.this, FormPrint.class);
			intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
			startActivityForResult(intent, 0);
		} else if (v.equals(rlCheckStatus)) {
			setSelector(rlCheckStatus, R.id.icCheckStatus, R.id.txCheckStatus, R.drawable.icon_check_taxrefund_selection);
			Intent intent = new Intent(MainEFilling.this, CheckStatusFilling.class);
			intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
			startActivityForResult(intent, 0);
		} else if (v.equals(btSetting)) {
			Intent intent = new Intent(MainEFilling.this, FillingSitting.class);
			intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
			startActivityForResult(intent, 0);
		} else if (v.equals(btLogout)) {
			PopupDialog popup = new PopupDialog(MainEFilling.this);
			popup.alert2Button(
					CheckLang.check(MainEFilling.this, getString(R.string.label_want_logout_th), getString(R.string.label_want_logout_en)),
					CheckLang.check(MainEFilling.this, getString(R.string.label_ok_th), getString(R.string.label_ok_en)),
					CheckLang.check(MainEFilling.this, getString(R.string.label_cancel_th), getString(R.string.label_cancel_en)),
					new DialogInterface.OnClickListener() {

						@Override
						public void onClick(DialogInterface dialog, int which) {
							// finish();
							Intent intent = new Intent(MainEFilling.this, Login_E_Filing.class);
							intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
							startActivityForResult(intent, 0);
						}
					}, new DialogInterface.OnClickListener() {

						@Override
						public void onClick(DialogInterface dialog, int which) {

						}
					});
		} else if (v.equals(rlInstructions)) {
			setSelector(rlInstructions, R.id.icSuggestion, R.id.txSuggestion, R.drawable.icon_suggestion_selection);
			Intent intent = new Intent(MainEFilling.this, InstructionsList.class);
			intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
			startActivityForResult(intent, 0);
		} else if (v.equals(rlChangePassword)) {
			setSelector(rlChangePassword, R.id.icChangePassword, R.id.txChangePassword, R.drawable.icon_change_password_selection);
			Intent intent = new Intent(MainEFilling.this, ResetPasswordWithNid.class);
			intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
			startActivityForResult(intent, 0);
		}
	}

	@Override
	public void onBackPressed() {
		super.onBackPressed();
		overridePendingTransition(0, 0);
	}

	private void setSelector(RelativeLayout view, int icon, int text, int background) {
		((ImageView) (ImageView) findViewById(icon)).setImageResource(background);
		((TextViewCustom) (TextViewCustom) findViewById(text)).setTextColor(getResources().getColor(R.color.color_white));
		view.setBackgroundColor(getResources().getColor(R.color.color_bar_top));
	}

	private void setNormal(RelativeLayout view, int icon, int text, int background) {
		((ImageView) (ImageView) findViewById(icon)).setImageResource(background);
		((TextViewCustom) (TextViewCustom) findViewById(text)).setTextColor(getResources().getColor(R.color.color_gray));
		view.setBackgroundColor(0);
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
		if (resultCode == MainEFilling.RESULT_CLOSE) {
			Intent intent = new Intent(MainEFilling.this, ResultFilling.class);
			intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
			startActivityForResult(intent, 0);
		} else if (resultCode == MainEFilling.RESULT_SENDSATISFACTION) {
			Intent intent = new Intent(MainEFilling.this, SendSatisfaction.class);
			intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
			startActivityForResult(intent, 0);
		}
		setNormal(rlUserProfile, R.id.icUserProfile, R.id.txUserProfile, R.drawable.icon_general_profile);
		setNormal(rlFilling, R.id.icFilling, R.id.txFilling, R.drawable.icon_pnd91);
		setNormal(rlPrint, R.id.icPrint, R.id.txPrint, R.drawable.icon_print);
		setNormal(rlCheckStatus, R.id.icCheckStatus, R.id.txCheckStatus, R.drawable.icon_check_taxrefund);
		setNormal(rlInstructions, R.id.icSuggestion, R.id.txSuggestion, R.drawable.icon_suggestion);
		setNormal(rlChangePassword, R.id.icChangePassword, R.id.txChangePassword, R.drawable.icon_change_password);
	}
}
